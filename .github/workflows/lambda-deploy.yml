name: Deploy Backend to AWS Lambda

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'lambda_handler.py'
      - 'requirements-lambda.txt'
      - 'serverless.yml'
      - '.github/workflows/lambda-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'lambda_handler.py'
      - 'requirements-lambda.txt'
      - 'serverless.yml'

env:
  AWS_REGION: eu-west-1
  PYTHON_VERSION: '3.12'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-lambda.txt', 'requirements-dev.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lambda.txt
          pip install -r requirements-dev.txt

      - name: Run linting
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check src/

      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Serverless Framework
        run: |
          npm install -g serverless@3
          npm install serverless-python-requirements serverless-domain-manager

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to staging
        run: |
          serverless deploy --stage staging

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Serverless Framework
        run: |
          npm install -g serverless@3
          npm install serverless-python-requirements serverless-domain-manager

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to production
        run: |
          serverless deploy --stage production