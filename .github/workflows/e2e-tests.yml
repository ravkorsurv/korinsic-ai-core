name: E2E Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.12'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Start backend server
        run: |
          export FLASK_ENV=testing
          export REDIS_URL=redis://localhost:6379
          python src/app.py &
          echo $! > backend.pid
          
          # Wait for backend to be ready
          timeout 30 bash -c 'until curl -f http://localhost:5000/health; do sleep 1; done'

      - name: Build frontend
        run: |
          export VITE_API_BASE_URL=http://localhost:5000
          npm run build

      - name: Start frontend server
        run: |
          npm run preview &
          echo $! > frontend.pid
          
          # Wait for frontend to be ready
          timeout 30 bash -c 'until curl -f http://localhost:4173; do sleep 1; done'

      - name: Run E2E tests
        run: |
          export PLAYWRIGHT_BASE_URL=http://localhost:4173
          export API_BASE_URL=http://localhost:5000
          npx playwright test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-screenshots
          path: test-results/

      - name: Cleanup
        if: always()
        run: |
          # Kill servers
          if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
          if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: e2e-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          export VITE_API_BASE_URL=https://api-staging.korinsic.com
          npm run build

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/